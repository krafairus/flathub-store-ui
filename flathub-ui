#!/usr/bin/env python3

from PyQt5.QtCore import QUrl, QProcess
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QTextEdit, QPushButton, QDialog, QProgressBar
from PyQt5.QtWebEngineWidgets import QWebEngineView

import shutil
import sys
import tempfile
import urllib.request
import webbrowser


class CommandOutput(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle('Progreso de instalación del paquete Flatpak')
        self.resize(600, 400)

        self.layout = QVBoxLayout()

        self.text_edit = QTextEdit(self)
        self.text_edit.setReadOnly(True)
        self.layout.addWidget(self.text_edit)

        # Add a progress bar
        self.progress_bar = QProgressBar(self)
        self.progress_bar.setRange(0, 0)
        self.layout.addWidget(self.progress_bar)

        self.button_force_cancel = QPushButton("Forzar Cancelación De Instalación", self)
        self.button_force_cancel.clicked.connect(self.force_cancel_process)
        self.layout.addWidget(self.button_force_cancel)

        self.button_close = QPushButton("Cerrar", self)
        self.button_close.clicked.connect(self.close)
        self.button_close.setEnabled(False)
        self.button_close.setVisible(False)
        self.layout.addWidget(self.button_close)

        self.setLayout(self.layout)

    def append_output(self, text):
        self.text_edit.append(text)

    def process_finished(self):
        self.progress_bar.setRange(0, 100)
        self.progress_bar.setValue(100)

        self.button_force_cancel.setVisible(False)
        self.button_close.setEnabled(True)
        self.button_close.setVisible(True)

    def force_cancel_process(self):
        if self.process:
            self.process.kill()
        self.close()


class PythonWebView(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('Flathub Store')
        self.setWindowIcon(QIcon('flathub-ui'))

        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)

        self.resize(1000, 600)

        self.layout = QVBoxLayout()
        self.central_widget.setLayout(self.layout)

        self.wview = QWebEngineView(self)
        self.wview.load(QUrl('https://flathub.org'))
        self.wview.page().profile().downloadRequested.connect(self.download_requested)
        self.wview.page().profile().setHttpUserAgent('Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:90.0) Gecko/20100101 Firefox/90.0')

        self.layout.addWidget(self.wview)

        self.show()

        self.move(QApplication.desktop().screen().rect().center() - self.rect().center())

    def download_requested(self, download):
        url = download.url().toString()
        if url.endswith('.flatpakref'):
            with urllib.request.urlopen(url) as response, tempfile.NamedTemporaryFile(suffix='.flatpakref', delete=False) as fp:
                shutil.copyfileobj(response, fp)
                fp.close()

                self.process = QProcess()
                self.process.setProcessChannelMode(QProcess.MergedChannels)

                self.output_window = CommandOutput(self)
                self.output_window.process = self.process
                self.output_window.show()

                self.process.readyRead.connect(self.read_output)
                self.process.finished.connect(self.output_window.process_finished)
                self.process.start('flatpak', ['install', '-y', '--user', fp.name])

                download.cancel()
        elif not url.startswith('https://flathub.org'):
            webbrowser.open(url, 2)
            download.cancel()

    def read_output(self):
        text = bytes(self.process.readAll()).decode("utf-8")
        self.output_window.append_output(text)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    view = PythonWebView()
    sys.exit(app.exec_())
